// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package su.u_c.deadzone.data.Shoot



@SerialVersionUID(0L)
final case class Shoot(
    x: Float = 0.0f,
    y: Float = 0.0f,
    dx: Float = 0.0f,
    dy: Float = 0.0f
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Shoot] with com.trueaccord.lenses.Updatable[Shoot] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (x != 0.0f) { __size += com.google.protobuf.CodedOutputStream.computeFloatSize(1, x) }
      if (y != 0.0f) { __size += com.google.protobuf.CodedOutputStream.computeFloatSize(2, y) }
      if (dx != 0.0f) { __size += com.google.protobuf.CodedOutputStream.computeFloatSize(3, dx) }
      if (dy != 0.0f) { __size += com.google.protobuf.CodedOutputStream.computeFloatSize(4, dy) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = x
        if (__v != 0.0f) {
          _output__.writeFloat(1, __v)
        }
      };
      {
        val __v = y
        if (__v != 0.0f) {
          _output__.writeFloat(2, __v)
        }
      };
      {
        val __v = dx
        if (__v != 0.0f) {
          _output__.writeFloat(3, __v)
        }
      };
      {
        val __v = dy
        if (__v != 0.0f) {
          _output__.writeFloat(4, __v)
        }
      };
    }
    def mergeFrom(`_input__`: com.google.protobuf.CodedInputStream): su.u_c.deadzone.data.Shoot.Shoot = {
      var __x = this.x
      var __y = this.y
      var __dx = this.dx
      var __dy = this.dy
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 13 =>
            __x = _input__.readFloat()
          case 21 =>
            __y = _input__.readFloat()
          case 29 =>
            __dx = _input__.readFloat()
          case 37 =>
            __dy = _input__.readFloat()
          case tag => _input__.skipField(tag)
        }
      }
      su.u_c.deadzone.data.Shoot.Shoot(
          x = __x,
          y = __y,
          dx = __dx,
          dy = __dy
      )
    }
    def withX(__v: Float): Shoot = copy(x = __v)
    def withY(__v: Float): Shoot = copy(y = __v)
    def withDx(__v: Float): Shoot = copy(dx = __v)
    def withDy(__v: Float): Shoot = copy(dy = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => {
          val __t = x
          if (__t != 0.0f) __t else null
        }
        case 2 => {
          val __t = y
          if (__t != 0.0f) __t else null
        }
        case 3 => {
          val __t = dx
          if (__t != 0.0f) __t else null
        }
        case 4 => {
          val __t = dy
          if (__t != 0.0f) __t else null
        }
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = su.u_c.deadzone.data.Shoot.Shoot
}

object Shoot extends com.trueaccord.scalapb.GeneratedMessageCompanion[su.u_c.deadzone.data.Shoot.Shoot] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[su.u_c.deadzone.data.Shoot.Shoot] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): su.u_c.deadzone.data.Shoot.Shoot = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    su.u_c.deadzone.data.Shoot.Shoot(
      __fieldsMap.getOrElse(__fields.get(0), 0.0f).asInstanceOf[Float],
      __fieldsMap.getOrElse(__fields.get(1), 0.0f).asInstanceOf[Float],
      __fieldsMap.getOrElse(__fields.get(2), 0.0f).asInstanceOf[Float],
      __fieldsMap.getOrElse(__fields.get(3), 0.0f).asInstanceOf[Float]
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = ShootProto.descriptor.getMessageTypes.get(0)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = su.u_c.deadzone.data.Shoot.Shoot(
  )
  implicit class ShootLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, su.u_c.deadzone.data.Shoot.Shoot]) extends com.trueaccord.lenses.ObjectLens[UpperPB, su.u_c.deadzone.data.Shoot.Shoot](_l) {
    def x: com.trueaccord.lenses.Lens[UpperPB, Float] = field(_.x)((c_, f_) => c_.copy(x = f_))
    def y: com.trueaccord.lenses.Lens[UpperPB, Float] = field(_.y)((c_, f_) => c_.copy(y = f_))
    def dx: com.trueaccord.lenses.Lens[UpperPB, Float] = field(_.dx)((c_, f_) => c_.copy(dx = f_))
    def dy: com.trueaccord.lenses.Lens[UpperPB, Float] = field(_.dy)((c_, f_) => c_.copy(dy = f_))
  }
  final val X_FIELD_NUMBER = 1
  final val Y_FIELD_NUMBER = 2
  final val DX_FIELD_NUMBER = 3
  final val DY_FIELD_NUMBER = 4
}
